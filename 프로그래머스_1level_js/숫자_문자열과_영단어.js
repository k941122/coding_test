/**
 * 숫자 문자여로가 영단어
 * 
 * 문제 설명
 * 
 * 네오와 프로도가 숫자놀이를 하고 있습니다. 네오가 프로도에게 숫자를 건넬 때 일부 자릿수를 영단어로 바꾼 카드를 건네주면 프로도는 원래 숫자를 찾는 게임입니다.
 * 
 * 다음은 숫자의 일부 자릿수를 영단어로 바꾸는 예시입니다.
 * 
 * 1478 → "one4seveneight"
 * 234567 → "23four5six7"
 * 10203 → "1zerotwozero3"
 * 이렇게 숫자의 일부 자릿수가 영단어로 바뀌어졌거나, 혹은 바뀌지 않고 그대로인 문자열 s가 매개변수로 주어집니다. s가 의미하는 원래 숫자를 return 하도록 solution 함수를 완성해주세요.
 * 
 * 참고로 각 숫자에 대응되는 영단어는 다음 표와 같습니다.
 * 
 * 숫자	영단어
 * 0	zero
 * 1	one
 * 2	two
 * 3	three
 * 4	four
 * 5	five
 * 6	six
 * 7	seven
 * 8	eight
 * 9	nine
 * 
 * 제한 사항
 * 
 * - 1 ≤ s의 길이 ≤ 50
 * 
 * - s가 "zero" 또는 "0"으로 시작하는 경우는 주어지지 않습니다.
 * 
 * - return 값이 1 이상 2,000,000,000 이하의 정수가 되는 올바른 입력만 s로 주어집니다.
 * 
 * 입출력 예시
 * 
 *      s	result
 * "one4seveneight"	1478
 * "23four5six7"	234567
 * "2three45sixseven"	234567
 * "123"	123
 * 
 * 입출력 예시 설명
 * 
 * ex1) 문제 예시와 같습니다.
 * 
 * ex2) 문제 예시와 같습니다.
 * 
 * ex3) "three"는 3, "six"는 6, "seven"은 7에 대응되기 때문에 정답은 입출력 예 #2와 같은 234567이 됩니다.
 *       입출력 예 #2와 #3과 같이 같은 정답을 가리키는 문자열이 여러 가지가 나올 수 있습니다.
 * 
 * ex4) s에는 영단어로 바뀐 부분이 없습니다.
 * 
 */

/**
 * 문제 해석
 * 
 * 영어인 부분을 숫자로 바꾸시오 
 * 
 * switch case 문 
 * 
 * 
 * 
 */

function solution(s) {
    let nums = ["zero","one","two","three","four","five","six","seven","eight","nine"];
    nums.forEach((v,i)=> s = s.replaceAll(v,i))
    return Number(s);
}

/**
 * nums라는 변수의 값으로 배열을 마들어 준다. 그 배열의 요소들은 문자형 "zero","one"..
 * 이다. 이때 배열의 요소 값은 "zero"이고 indxex는 0 이다. 즉 요소의 값과 인덱스의 값이 같다.
 * 
 * 이점을 이용하여 nums 변수에 forEach 문을 이용해 해당 배열을 순회 하는데
 * 이 배열의 요소들을 이용해서 s(숫자를 값으로 가진 문자형)의 값을 replaceAll 메서드를 이용해 바꿔준다.
 * 이때 reaplaceAll은 해당 문자형의 값을 매개변수에 적용된 값으로 다 교체해 준다는 것이었는데
 * replaceAll의 매겨변수의 첫번째 값은 s에서 변하고자 하는 값이고 (one two three)
 * 뒤의 i는 변하게 하려는 값이다 (i는 배열 nums의 index 이다) 그래서
 * 결국 s(문자형)에 문자로 나타낸 숫자는 nums 배열의 요소 값과 일치하면 그 요소의 인덱스로
 * 변환 된다. 
 */