/**
 * 최대공약수와 최소공배수
 * 
 * 문제 설명
 * 
 * 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, 
 * solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 
 * 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 
 * 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.
 * 
 * 제한 사항
 * 
 * - 두 수는 1이상 1000000이하의 자연수입니다.
 * 
 * 입출력 예시 
 * 
 * n	m	return
 * 3	12	[3, 12]
 * 2	5	[1, 10]
 * 
 * 입출력 예시 설명
 * 
 * ex1) 위의 설명과 같습니다.
 * 
 * ex2) 자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 [1, 10]을 리턴해야 합니다.
 * 
 */

/**
 * 문제 해석
 * 
 * 랙문을 이용해 최소공배수의 값만큼 순회를 해주면서
 * 그안에 if문으로 ,최대 공약수 이면서 최소 공배웃 인 값을 누적 시킨후에 
 * 해당 누적값과 n과m을 곱한 값을 answer로 나누어 주면 값이 나온다.
 * 
 */

function solution(n, m) {
    var answer;
    for(let i =1; i< Math.min(m,n);i++) {
        if(Math.max(n,m)%i === 0&&Math.min(n,m)%i === 0)
        answer = i
    }
    const answer1 = [answer,n*m/answer]
    return answer1;
}

