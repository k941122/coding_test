/**
 * x 만큼 간격이 있는 n개의 숫자
 * 
 * 문제 설명
 * 
 * 함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 
 * n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, 
 * solution을 완성해주세요.
 * 
 * 제한 조건
 * 
 * - x는 -10000000 이상, 10000000 이하인 정수입니다.
 * - n은 1000 이하인 자연수입니다.
 * 
 * 입출력 예시
 * 
 * x	n	answer
 * 2	5	[2,4,6,8,10]
 * 4	3	[4,8,12]
 * -4	2	[-4, -8]
 * 
 * 
 */

/**
 * 문제 해석
 * 
 * 정수 x
 * 자연수 n
 * 
 * x 시작 x개씩 증가 n 길이 배열 만들기
 * 
 * 
 * 
 */

// 오답 코드

function solution(x, n) {
    return Array.from(n,(_,v) => v*x );
}

/**
 * 모든 문제가 빈 배열 [] 로 나왔다.
 */

// 정답 코드

function solution (x,n) {
    return Array(n).fill(x).map((v,i) => (i+1)*v);
}

/**
 * 오답 코드에서 사용됬던 식은 Array.from 이었다. 
 * 이 메서드는 길이만큼 배열을 만들고 두번째 파라미터에 콜백함수를 넣어 줘서
 * 배열을 만드는 것이다.
 * 하지만 첫번째 파라미터가 전체 길이와 마지막 숫자가 되는것인데, 
 * 이점을 간과하고 Array.from 메서드를 사용했다. 
 * 
 * 그래서 Array 매서드를 이용해서 n의 길이 만큼의 배열을 만들어 주고 
 * fill 메서드를 이용해서 해당 배열의 요소를 x로 채워주었다.
 * 그리고 map 메서드를 이용해서 해당 배열의 요소들을 v의 배수로 바꿔주었다. 
 * 
 * for과 push, 를 이용할수도 있었지만 코드의 간결성과 유지보수를 위해
 * 메서드를 최대한 사용하려고 노력했다.
 */


