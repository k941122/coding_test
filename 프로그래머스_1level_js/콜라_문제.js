/**
 * 콜라 문제
 * 
 * 문제 설명
 * 
 * 오래전 유행했던 콜라 문제가 있습니다. 콜라 문제의 지문은 다음과 같습니다.
 * 
 * 정답은 아무에게도 말하지 마세요.
 * 
 * 콜라 빈 병 2개를 가져다주면 콜라 1병을 주는 마트가 있다. 빈 병 20개를 가져다주면 
 * 몇 병을 받을 수 있는가?
 * 
 * 단, 보유 중인 빈 병이 2개 미만이면, 콜라를 받을 수 없다.
 * 
 * 문제를 풀던 상빈이는 콜라 문제의 완벽한 해답을 찾았습니다. 상빈이가 
 * 푼 방법은 아래 그림과 같습니다. 우선 콜라 빈 병 20병을 가져가서 10병을 받습니다. 
 * 받은 10병을 모두 마신 뒤, 가져가서 5병을 받습니다. 5병 중 4병을 모두 마신 뒤 
 * 가져가서 2병을 받고, 또 2병을 모두 마신 뒤 가져가서 1병을 받습니다. 받은 
 * 1병과 5병을 받았을 때 남은 1병을 모두 마신 뒤 가져가면 1병을 또 받을 수 있습니다. 
 * 이 경우 상빈이는 총 10 + 5 + 2 + 1 + 1 = 19병의 콜라를 받을 수 있습니다.
 * 
 * image6.PNG
 * 
 * 문제를 열심히 풀던 상빈이는 일반화된 콜라 문제를 생각했습니다. 
 * 이 문제는 빈 병 a개를 가져다주면 콜라 b병을 주는 마트가 있을 때, 빈 병 
 * n개를 가져다주면 몇 병을 받을 수 있는지 계산하는 문제입니다. 기존 콜라 
 * 문제와 마찬가지로, 보유 중인 빈 병이 a개 미만이면, 추가적으로 빈 병을 
 * 받을 순 없습니다. 상빈이는 열심히 고심했지만, 일반화된 콜라 문제의 답을 찾을 수 
 * 없었습니다. 상빈이를 도와, 일반화된 콜라 문제를 해결하는 프로그램을 만들어 주세요.
 * 
 * 콜라를 받기 위해 마트에 주어야 하는 병 수 a, 빈 병 a개를 가져다 주면 마트가 
 * 주는 콜라 병 수 b, 상빈이가 가지고 있는 빈 병의 개수 n이 매개변수로 주어집니다. 
 * 상빈이가 받을 수 있는 콜라의 병 수를 return 하도록 solution 함수를 작성해주세요.
 * 
 * 제한 사항
 * 
 * - 1 ≤ b < a ≤ n ≤ 1,000,000
 * 
 * - 정답은 항상 int 범위를 넘지 않게 주어집니다.
 * 
 * 입출력 예시
 * 
 * a	b	n	result
 * 2	1	20	19
 * 3	1	20	9
 * 
 * 입출력 예시 설명
 * 
 * ex1) 본문에서 설명한 예시입니다.
 * 
 * ex2) 빈 병 20개 중 18개를 마트에 가져가서, 6병의 콜라를 받습니다. 이때 상빈이가 가지고 있는 콜라 병의 수는 8(20 – 18 + 6 = 8)개 입니다.
 *      빈 병 8개 중 6개를 마트에 가져가서, 2병의 콜라를 받습니다. 이때 상빈이가 가지고 있는 콜라 병의 수는 4(8 – 6 + 2 = 4)개 입니다.
 *      빈 병 4 개중 3개를 마트에 가져가서, 1병의 콜라를 받습니다. 이때 상빈이가 가지고 있는 콜라 병의 수는 2(4 – 3 + 1 = 2)개 입니다.
 *      3번의 교환 동안 상빈이는 9(6 + 2 + 1 = 9)병의 콜라를 받았습니다.
 * 
 * 
 */

/**
 * 문제 해석
 * 
 * a - 빈병
 * 
 * b - 주는 콜라 갯수
 * 
 * n - 내가 가지고 있는 콜라 갯수 
 * 
 * n/a
 * 
 */

function solution(a, b, n) {
    let answer = 0;
    let back = n;

    while(true) {
        if (a>back){
            break;
        }
        answer += parseInt(back/a)*b;
        back = parseInt(back/a)*b + back%a
    }


    return answer;
}

/**
 * 어디까지 반복해야 되는지 범위가 명확하지 않기 때문에 while문 true를 이용해 무한 반복을 걸어놓고
 * if문을 이용해 a(가져가야 되는 빈병갯수)가 back(내가 가지고 있는 빈병갯수) 보다 크면
 * (가지고 있는 빈병 갯수가 가져가야 되는 빈병 갯수 보다 작으면!) break를 이용해 반복을 멈춰준다.
 * 
 * answer 에는 parseInt 메서드를 이용해 int(양수 음수등 정수형 표현만 return)해주게한다음
 * back(가지고 있는 빈벼 갯수)와 a(내야될 빈병 갯수)를 나눈다음 b(마트에서 줄 빈병 갯수)를 곱해준다.
 * 그리고 back은 while이 순환 하면서 변하는 가지고 있느 빈병의 갯수를 나타낸다.
 * parseInt 메서드 안에 back과 a를 나눠준후 b를 더한 값과 back 과 a를 나눈후 나머지 값을 더해준다.
 * 그래야 내가 가지고 있는 병의 갯수가 정확히 나타난다
 */