/**
 * 약수의 개수와 덧셈
 * 
 * 문제 설명
 * 
 * 두 정수 left와 right가 매개변수로 주어집니다. left부터 right까지의 모든 수들 
 * 중에서, 약수의 개수가 짝수인 수는 더하고, 약수의 개수가 홀수인 
 * 수는 뺀 수를 return 하도록 solution 함수를 완성해주세요.
 * 
 * 제한 사항
 * 
 * - 1 ≤ left ≤ right ≤ 1,000
 * 
 * 
 * 입출력 예시
 * 
 * left	right	result
 * 13	17	43
 * 24	27	52
 * 
 * 입출력 예시 설명
 * 
 * ex1) 다음 표는 13부터 17까지의 수들의 약수를 모두 나타낸 것입니다.
 * 수	약수	약수의 개수
 * 13	1, 13	2
 * 14	1, 2, 7, 14	4
 * 15	1, 3, 5, 15	4
 * 16	1, 2, 4, 8, 16	5
 * 17	1, 17	2
 * 따라서, 13 + 14 + 15 - 16 + 17 = 43을 return 해야 합니다.
 * 
 * ex2) 다음 표는 24부터 27까지의 수들의 약수를 모두 나타낸 것입니다.
 * 수	약수	약수의 개수
 * 24	1, 2, 3, 4, 6, 8, 12, 24	8
 * 25	1, 5, 25	3
 * 26	1, 2, 13, 26	4
 * 27	1, 3, 9, 27	4 
 * 따라서, 24 - 25 + 26 + 27 = 52를 return 해야 합니다.
 * 
 * 
 */

/**
 * 문제 해석
 * 
 * 정수 left right
 * 
 * left 와 right 사이의 수중에서 
 * 
 * 약수의 개수 - 짝수 - 모두 더하기
 * 
 * 약수의 개수 홀수 = 빼기
 * 
 * 
 */

function solution(left, right) {
    let answer = 0;

    for(let i = left;i<=right; i++) {
        if 
        (Number.isInteger(Math.sqrt(i))) {
            answer -= i;
        } else {
            answer += i;
        }
    }
    return answer;
}

/**
 * for 반복문 에서 기본값을 left로 할당하고 rigth만큼 반복해서 loop 해준다.
 * 
 * if 문의 조건에서 Number 메서드의 isInteger 메서드에 Math.sqrt라는 제곱근을 구하는 메서드를
 * 사용해서 i의 값이 홀수면 answer에 i값을 뺀 값을 누적시키고
 * 짝수면 i값을 더한값을 누적시킨다.
 */