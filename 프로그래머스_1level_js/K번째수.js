/**
 * K번째수
 * 
 * 문제 설명
 * 
 * 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, 
 * k번째에 있는 수를 구하려 합니다.
 * 
 * 예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면
 * 
 * array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.
 * 1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.
 * 2에서 나온 배열의 3번째 숫자는 5입니다.
 * 배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, 
 * commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 
 * return 하도록 solution 함수를 작성해주세요.
 * 
 * 제한 사항
 * 
 * - array의 길이는 1 이상 100 이하입니다.
 * 
 * - array의 각 원소는 1 이상 100 이하입니다.
 * 
 * - commands의 길이는 1 이상 50 이하입니다.
 * 
 * - commands의 각 원소는 길이가 3입니다.
 * 
 * 입출력 예시
 * 
 *     array	                      commands	                  return
 * [1, 5, 2, 6, 3, 7, 4]	[[2, 5, 3], [4, 4, 1], [1, 7, 3]]	[5, 6, 3]
 * 
 * 입출력 예시 설명
 * 
 * ex1) [1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. 
 *      [2, 3, 5, 6]의 세 번째 숫자는 5입니다.
 * 
 *      [1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. 
 *      [6]의 첫 번째 숫자는 6입니다.
 * 
 *      [1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. 
 *      [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.
 * 
 * 
 */

/**
 * 문제 해석
 * 
 * i start j end 그중에서 k번째 index 추출
 * 
 * 그런데 array는 배열 
 * 
 * command 는 이중 배열 0 - i, 1 - j, 2 - k
 * 
 * for문을 이용해 command의 길이만큼 순회하며서
 * array를 slice 메서드를 이용해 추출해주고 sort를 이용해 오름차순 정렬 해준다.
 * 
 * 긜고 push를 이용해 해당 값들을 넣어준다.
 * 
 */

function solution(array, commands) {
    var answer = [];
    for(let i = 0; i < commands.length; i++){
        let arr = array.slice(commands[i][0]-1, commands[i][1]);

        arr.sort((a,b) => a-b);

        answer.push(arr[commands[i][2] -1]);
    }
    return answer;
}

/**
 * commands 배열의 요소를 순회하면서 한번 순회할 때마다 
 * arr 변수에 slice 메서드를 이용해서 commands 이중배열의 내부 요소의 범위 만큼 
 * 추출 한다. 그리고 그 범위만큼 나온 배열을 오름차순 정렬을 한뒤에
 * answer에 push해 주면 된다.
 */