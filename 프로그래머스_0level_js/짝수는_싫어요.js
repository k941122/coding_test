/**
 * 짝수는 싫어요.
 * 
 * 문제 설명
 * 
 * 정수 n이 매개변수로 주어질 때, n 이하의 홀수가 오름차순으로 담긴 배열을 
 * return하도록 solution 함수를 완성해주세요.
 * 
 * 제한 사항
 * -  1 ≤ n ≤ 100
 * 
 * 입출력 예시
 * 
 *  n	result
 * 10	[1, 3, 5, 7, 9]
 * 15	[1, 3, 5, 7, 9, 11, 13, 15]
 * 
 * 입출력 예시 설명
 * 
 * ex1) 10 이하의 홀수가 담긴 배열 [1, 3, 5, 7, 9]를 return합니다.
 * ex2) 15 이하의 홀수가 담긴 배열 [1, 3, 5, 7, 9, 11, 13, 15]를 return합니다.
 * 
 */

/**
 * 문제 해석
 * 
 * n = 정수 = 오름차순 배열로 바꿀것.
 * 
 * 오름차순 배열로 바뀐 n이하의 숫자형 배열의 요소 중에서 홀수만 있는 배열로 바꿀것.
 * 
 * [...n].sort((a,b) => a-b).filter((ele)=> ele%2 !== 0);
 * 
 */


function solution (n) {
    return [...n].sort((a,b) => a-b).filter((i)=> i%2 !== 0);
}

/**
 *  테스트 1
 * 입력값 〉	10 
 * 기댓값 〉	[1, 3, 5, 7, 9]
 * 실행 결과 〉	실행한 결괏값 []이 기댓값 [1,3,5,7,9]과 다릅니다.
 * 
 * 테스트 2
 * 입력값 〉	15
 * 기댓값 〉	[1, 3, 5, 7, 9, 11, 13, 15]
 * 실행 결과 〉	실행한 결괏값 [15]이 기댓값 [1,3,5,7,9,11,13,15]과 다릅니다.
 * 
 * 테스트 값 에서 나는 기본적으로 n 을 배열로 만들어 주는 식 자체가 틀렸다는걸 알았다.
 * 
 * n은 하나의 정수이다. 이 한 개의 정수를 i <= n의 정수로 만들려면?
 * for문의 조건을 i <= n 으로 해줘야 한다. 그러면 비어 있는 answer에 계산한 index의 값이 
 * 들어가게 된다.
 * 
 * 
 * 
 */

function solution2 (n) {
    let answer = [];
    
    for (let i = 0; i <= n; i++) {
        answer += i%2 === 1;
    }
    return answer;
}

/**
 * 답에서 false와true만이 무한히 반복됐다. 아마 answer += i%2 === 1 에서 
 * 명확한 배열의 index 값이 없어서 그럴 것이다. 도대체 정수 보다 작거나 같은 요소를 가진
 * 배열을 어떻게 만들까?
 * 
 * 
 */

function solution2 (n) {
    let arr = [...new Array(n)].map((_,i)=>i+1);
    return arr.filter((ele) => ele%2 === 1 );
}

/**
 * n 이라는 하나의 정수를 어떻게 n 보다 크거나 작은 숫자형 배열을 어떻게 만들까?
 * 
 * -> Array 생성자 함수 "new Array(정수)"를 이용해 해당 길이의 배열을 생성 했다.
 *    spread 형식 "..."을 사용한 이유는 length의 값만 n이고 실제로 내부에 요소가 없기
 *    때문이다.
 * 
 *    생성된 newArray 배열은 15개의 공백만 있다. 이 공백에 map을 이용해서 전체 길이 만큼
 *    i+1을 더해줘 1씩 더해주면 0~14 index, 1~15 value 가 생성된다.
 * 
 * 새롭게 생성된 arr 배열을 filter 함수를 통해 요소들은 ele(요소값)%2 === 1 이라는 조건에
 * 일치하는 요소들로 이루어진 배열로 만들어 지게 된다.
 */


