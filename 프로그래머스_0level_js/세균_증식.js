/**
 * 세균 증식
 * 
 * 문제 설명
 * 
 * 어떤 세균은 1시간에 두배만큼 증식한다고 합니다. 
 * 처음 세균의 마리수 n과 경과한 시간 t가 매개변수로 주어질 때 t시간 후 
 * 세균의 수를 return하도록 solution 함수를 완성해주세요.
 * 
 * 제한 사항
 * 
 * - 1 ≤ n ≤ 10
 * - 1 ≤ t ≤ 15
 * 
 * 입출력 예시
 * 
 * n	t	result
 * 2	10	2048
 * 7	15	229,376
 * 
 * 입출력 예시 설명
 * 
 * ex1) 처음엔 2마리, 1시간 후엔 4마리, 2시간 후엔 8마리, ..., 
 * 10시간 후엔 2048마리가 됩니다. 따라서 2048을 return합니다. 
 * 
 * ex2) 처음엔 7마리, 1시간 후엔 14마리, 2시간 후엔 28마리, ..., 
 * 15시간 후엔 229376마리가 됩니다. 따라서 229,376을 return합니다.
 * 
 */

/**
 * 문제 분석
 * 
 * 1시간 *2 증가.
 * 
 * n 처음 숫자 n
 * 
 * t 경과한 시간 t*2
 * 
 * 
 * n**t*2 =? (error)
 * 
 * Array.from(Array(t), (_,index) => index+1).reduce((acc ),0)
 * [1,2,3,4,5,6,7,8,9,10] 을 reduce로 하면 각 요소의 값을 더해준다, 
 * 요소의 값 0 =n, 2 = n*2 , 3 
 * reduce? 
 */

//▼ 틀린 코드!
function solution (n,t) {
    for (let i = 0; i <= t; i++) {
        n*2
    }
    return n;
}

/**
 * 테스트 1
 * 입력값 〉	2, 10
 * 기댓값 〉	2048
 * 실행 결과 〉	실행한 결괏값 2이 기댓값 2048과 다릅니다.
 * 
 * 테스트 2
 * 입력값 〉	7, 15
 * 기댓값 〉	229376
 * 실행 결과 〉	실행한 결괏값 7이 기댓값 229376과 다릅니다.
 */

//▼ 맞는 코드!

function solution02 (n,t) {
    for (let i = 1; i <= t; i++) {
       answer = n*= 2
    }
    return n;
}

/**
 * solution 함수를 작성 하기 전에는 t를 배열화 시켜서 reduce를 적용 시킬려고 했지만 
 * 실패하고 마땅한 식이 떠오르지 않았다. 차라리 for문이 좀더 쉬워 보여서 solution 함수를
 * 작성 했다. 
 * 
 * 하지만 오답이 나왔고, 자세히 살펴보니 i는 t와 작걱나 가을때 까지 loop 하는 것인데,
 * 배열이 아닌 정수형 숫자를 loop 하기 때문에 초기값이 0이 아닌 1 이어야 했다.
 * 
 * 해당 t 만큼 for 문이 loop 하기 때문에 n(초기 세균값)*=2를 해주면 
 * n에 2가 loop될때마다 누적된다.
 */