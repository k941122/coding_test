/**
 * 배열 만들기 3
 * 
 * 문제 설명
 * 
 * 정수 배열 arr와 2개의 구간이 담긴 배열 intervals가 주어집니다.
 * 
 * intervals는 항상 [[a1, b1], [a2, b2]]의 꼴로 주어지며 각 구간은 닫힌 구간입니다. 
 * 닫힌 구간은 양 끝값과 그 사이의 값을 모두 포함하는 구간을 의미합니다.
 * 
 * 이때 배열 arr의 첫 번째 구간에 해당하는 배열과 두 번째 구간에 해당하는 
 * 배열을 앞뒤로 붙여 새로운 배열을 만들어 return 하는 solution 함수를 완성해 주세요.
 * 
 * 제한 사항
 * 
 * - 1 ≤ arr의 길이 ≤ 100,000
 *   1 ≤ arr의 원소 < 100
 * 
 * - 1 ≤ a1 ≤ b1 < arr의 길이
 * 
 * - 1 ≤ a2 ≤ b2 < arr의 길이
 * 
 * 입출력 예시
 * 
 *       arr	         intervals	             result
 * [1, 2, 3, 4, 5]	 [[1, 3], [0, 4]]	[2, 3, 4, 1, 2, 3, 4, 5]
 * 
 * 입출력 예시 설명
 * 
 * ex1) 첫 번째 구간에 해당하는 배열은 [2, 3, 4] 입니다.
 * 
 *      두 번째 구간에 해당하는 배열은 [1, 2, 3, 4, 5] 입니다.
 * 
 *      따라서 이 두 배열을 앞뒤로 붙인 배열인 [2, 3, 4, 1, 2, 3, 4, 5]를 return 합니다.
 * 
 */

/**
 * 문제 해석
 * 
 * arr = 정수배열 => [a,b,c,d]
 * 
 * interval = 2개 구간이 담긴 배열 => [[a,b],[c,d]]
 * 
 * arr 배열에서 interval에 담긴 2개의 배열 구간의 범위 만큼 을 추출해서 붙인뒤
 * 새로운 배열을 만드시오..! filter? 
 * 
 * 1. 어떻게 arr에서 interval을 추출할 것인가? -> 구조 분해 할당
 * 
 * 2. 추출한 값을 이어 붙이기 concat? 
 */

function solution (arr, intervals) {
    const [[a,b],[c,d]] = intervals;
    return [...arr.slice(a,b+1),...arr.slice(c,d+1)];
}

/**
 * 먼저 해당 문제를 풀기 위해서는 intervals를 구조분해를 이용해서 할당을 해줘야 한다.
 * 구조 분해 할당을 통해 intervals의 요소를 만든 후,
 * 
 * slice를 이용해서 intervals의 2차원 배열 요소들의 값을 매서드로 입력해 준다.
 * 여기서 slice 메서드의 매개변수 부분 start 부분을 입력하는 곳에는 그대로 써도 되지만,
 * end를 입력하는 부분에서는 +1을 해줘야 한다. (slice 메서드가 끝 인덱스 바로 앞가지만 추출하기 때문이다)
 */