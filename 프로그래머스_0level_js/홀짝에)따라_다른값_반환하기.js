/**
 * 홀짝에 따라 다른 값 반환하기
 * 
 * 문제 설명
 * 
 * 양의 정수 n이 매개변수로 주어질 때, n이 홀수라면 n 이하의 홀수인 모든 양의 
 * 정수의 합을 return 하고 n이 짝수라면 n 이하의 짝수인 
 * 모든 양의 정수의 제곱의 합을 return 하는 solution 함수를 작성해 주세요.
 * 
 * 제한 사항
 * - 1 ≤ n ≤ 100
 * 
 * 입출력 예시
 * 
 * n	result
 * 7	 16
 * 10	 220
 * 
 * 입출력 예시 설명
 * 
 * ex1) 예제 1번의 n은 7로 홀수입니다. 7 이하의 모든 양의 홀수는 1, 3, 5, 7이고 
 *      이들의 합인 1 + 3 + 5 + 7 = 16을 return 합니다.
 * 
 * ex2) 예제 2번의 n은 10으로 짝수입니다. 10 이하의 모든 양의 짝수는 
 *      2, 4, 6, 8, 10이고 이들의 제곱의 합인 22 + 42 + 62 + 82 + 102 = 4 + 16 + 36 + 64 + 100 = 220을 return 합니다.
 * 
 * 
 */

/**
 * 문제 해석
 * 
 * n은 정수 
 * 
 * n 홀수 ? => n이하의 모든 홀수의 합 retun
 * 
 * n 짝수 ? => n이하의 모든 짝수의 합 return => if 
 * 
 * Array.from(n,(_,index) => index +value ).
 * 
 * 짝수 홀수 => for 반복문 누적 
 * 
 */

// ▼ 오답
function solution (n) {
    let answer = 0;
    if(n!==0) {
        for (let i =1; i<=n ;i+=2) {
            answer += i
        } 
    } else {
        for (let i =2; i <=n ; i+2) {
            anwer += i*i
        }
    }
    return answer
}

/**
 * 테스트 2번이 정답 error 
 * 
 * 입력값 = 10 , 기댓값 = 220 , 출력된 결과값 = 25;
 */

// ▼ 오답02
function solution(n) {
    let answer = 0;
    if (n%2===0){
        for(let i=2; i<=n; i+=2){
            answer+=Math.pow(i,2)
        }
    } else {
        for (let i=1; i<=n; i+=2){
            answer+=i
        }
    }
    return answer;
}

/**
 * 오답 부분에서 내가 간과한 사실은 짝수면 n이하의 짝수를 곱한다는 것이었다.
 * 하지만 나는 for 반복문을 통해서 초기값을 1로 설정하고, 한번 loop할때 마다 i+2를 통해
 * i값을 2씩 증가하게 하여 answer 변수에 짝수의 총합을 더하기만 했었다.
 * 
 * 그래서 Math.pow 라는 메서드를 이용해 answer 변수에 i의 거듭제곱을 구한 값을 누적시켰다.
 * 
 * Math.pow(i,2) 는 i의 2승 이라는 누적제곱 이다. 
 * 
 * 또한 오답 부분에서 if문 조건식을 보니 (n!==0)으로 되있었는데,
 * 요소의 홀수 여부를 판단하는 하는 조건문은 n%2 !==0 이다.
 * 
 */

