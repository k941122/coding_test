/**
 * 다음에 올 숫자
 * 
 * 문제 설명
 * 
 * 등차수열 혹은 등비수열 common이 매개변수로 주어질 때, 
 * 마지막 원소 다음으로 올 숫자를 return 하도록 solution 함수를 완성해보세요.
 * 
 * 제한 사항
 * 
 * - 2 < common의 길이 < 1,000
 * - -1,000 < common의 원소 < 2,000
      common의 원소는 모두 정수입니다.
 * - 등차수열 혹은 등비수열이 아닌 경우는 없습니다.
 * - 등비수열인 경우 공비는 0이 아닌 정수입니다.
 * 
 * 입출력 예시 
 * 
 * common	    result
 * [1, 2, 3, 4]	  5
 * [2, 4, 8]	  16
 * 
 * 
 * 입출력 예시 설명
 * 
 * ex1) [1, 2, 3, 4]는 공차가 1인 등차수열이므로 다음에 올 수는 5이다.
 * 
 * ex2) [2, 4, 8]은 공비가 2인 등비수열이므로 다음에 올 수는 16이다.
 * 
 * 
 */

/**
 * 문제 해석
 * 
 * 등차수열 or 등비수열 common 배열
 * 
 * 등차수열과 등비 수열을 구분하는 함수를 만들어야 한다.
 * 
 * 등차 수열과 등비 수열을 어떻게 구별 할것인가? 
 * 
 * 등차수열 각 원소간 차이가 동일
 * 
 * 등비수열 각 원소를 곱했을때 동일한 수
 * 
 * 등차수열 - 마지막 원소에 등차값을 더함
 * 
 * 등비 수열 마지막 원소에 공비값을 곱함
 * 
 * IF ELSE 
 * 
 */

function solution (common) {
    if (common[1] / common[0] === common[2] / common[1]) {
        return common[1] / common[0] * common[common.length-1]
    } else {
        return common[1] - common[0] + common[common.length-1]
    }
}

/**
 * 배열의 두번째 요소와 첫번째 요소를 나눈 값이 세번째 요소와 두번째 요소를 나눈 값과 일치 한다면
 * 등비 수열 이기 때문에 두번째 요소에 첫번째 요소를 나눈값 (공비값 구하기)을 맨 마지막 요소와 곱해준다.
 * 
 * if문의 조건이 아니라면 등차수열 이기 때문에 두번째 요소에서 첫번째 요소를 뺀 값이 
 * 등차값 이고 해당 등차값에 마지막 요소의 값을 더해주면 등차수열의 값이 나온다.
 */