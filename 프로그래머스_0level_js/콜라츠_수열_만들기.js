/**
 * 콜라츠 수열 만들기
 * 
 * 문제 설명
 * 
 * 모든 자연수 x에 대해서 현재 값이 x이면 x가 짝수일 때는 2로 나누고, 
 * x가 홀수일 때는 3 * x + 1로 바꾸는 계산을 계속해서 반복하면 언젠가는 
 * 반드시 x가 1이 되는지 묻는 문제를 콜라츠 문제라고 부릅니다.
 * 
 * 그리고 위 과정에서 거쳐간 모든 수를 기록한 수열을 콜라츠 수열이라고 부릅니다.
 * 
 * 계산 결과 1,000 보다 작거나 같은 수에 대해서는 전부 언젠가 
 * 1에 도달한다는 것이 알려져 있습니다.
 * 
 * 임의의 1,000 보다 작거나 같은 양의 정수 n이 주어질 때 초기값이 
 * n인 콜라츠 수열을 return 하는 solution 함수를 완성해 주세요.
 * 
 * 
 * 제한 사항
 * 
 * - 1 ≤ n ≤ 1,000
 * 
 * 입출력 예시
 * 
 * n	result
 * 10	[10, 5, 16, 8, 4, 2, 1]
 * 
 * 입출력 예시 설명
 * 
 * ex1) 순서대로 연산한 결과를 표로 만들면 다음과 같습니다.
 *      연산 횟수	x	홀짝 여부
 *         0	   10	  짝수
 *         1 	    5	  홀수
 *         2	   16	  짝수
 *         3	    8	  짝수
 *         4	    4	  짝수
 *         5	    2	  짝수
 *         6	    1	  홀수
 *       따라서 [10, 5, 16, 8, 4, 2, 1]을 return 합니다.
 * 
 */

/**
 * 문제 해석
 * 
 * x는 현재값 
 * 
 * x가 짝수 -> x/2
 * 
 * x가 홀수 3*x+1
 * 
 * 어떤 메서드를 이용해야 될까? -> while? 
 * 
 * 
 * 
 */

function solution (n) {
    let answer = [];


    while (n > 0) {
        answer.push(n);
       if (n===1) {
            break;
       }
        if (n%2 === 0) {
            n = n/2;
        } else if (n%2 === 1) {
            n = 3*n+1;
        }
    }

    return answer;
}

/**
 * 콜라츠 수열을 만드는 것은 일종의 반복 이엇다.
 * n에서부터 짝수와 홀수를 판단한뒤 해당 조건에 맞는 식을 계산해주고 
 * 1이 될때까지 쭉 내려 가는 것이다.
 * 
 * 최 상단에 let answer 변수를 선언하고 빈 배열을 값으로 매긴 다음
 * 
 * while 문을 사용하는데, n이 0보다 더 크다는 조건으로 무한 반복을 시켜준다.
 * 
 * 그리고 answer 에 아래에서 계산될 n의 값들을 push  해 준뒤.
 * 
 * if 문의 조건으로 n이 1이 된다면 break를 이용해 멈춰준다.
 * 
 * if elseif 문을 이용해 n이 짝수일 경우와 홀수일 경우의 조건식을 써준뒤
 * 각 조건식에 따른 계산 결과를 while에 들어온 n의 값으로 넣어주면 된다.
 * 
 * 그러면 이 계산된 n의 값은 answer.push(n)을 이용해 
 * 변수 answer에 뒤에서 부터 차례대로 정렬된다.
 */
