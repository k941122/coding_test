/**
 * 중앙값 구하기
 * 
 * 문제 설명
 * 
 * 중앙값은 어떤 주어진 값들을 크기의 순서대로 정렬했을 때 가장 중앙에 위치하는 값을 
 * 의미합니다. 예를 들어 1, 2, 7, 10, 11의 중앙값은 7입니다. 
 * 정수 배열 array가 매개변수로 주어질 때, 중앙값을 return 하도록 
 * solution 함수를 완성해보세요.
 * 
 * 제한 사항
 * - array의 길이는 홀수 입니다.
 * - 0 < array의 길이 < 100
 * - -1,000 < array의 원소 < 1,000
 * 
 * 입출력 예시
 * 
 *      array	       result
 * [1, 2, 7, 10, 11]	 7
 * [9, -1, 0]	         0
 * 
 * 입출력 예시 설명
 * 
 * ex1) 본문과 동일합니다.
 * ex2) 9, -1, 0을 오름차순 정렬하면 -1, 0, 9이고 가장 중앙에 위치하는 값은 0입니다.
 * 
 */

/**
 * 문제 해석
 * 
 * array 는 숫자형을 가진 배열이다.
 * 
 * 배열의 데이터를 오름차순으로 정렬 -> 중간값을 indexing
 * 
 * sort((a,b) => a -b)
 * 
 * 
 */

function solution (array) {
    array.sort((a,b) => a-b);
    return arrary [((array.length)-1)/2];
}

/**
 * 배열의 오름 차순으로 정렬하기 위해 sort((a,b) => a-b)를 사용했다.
 * 
 * 정렬된 array배열의 중간 값을 구하기 위해 array [] 요소의 인덱스를 구하는 식을 넣어야 된다.
 * 
 * 연산의 순서를 정리하기 위해 ((array.length)-1)를 넣고, 그다음 /2를 계산해 주는 순서를 부여한다.
 * 
 * array.lenght -1은 전체 길이에서 -1 만큼 빼는 것으로, 마지막 index를 구하는 방법이다. 
 * ex) [1,2,3,4,5]인 배열이 있으면 총 길이는 5 하지만 index는 0부터 시작하므로 마지막 index는 4가 된다.
 *     여기서 그러므로 마지막 index를 구하려면 전체길이(5) - 1 이 되어야 한다.
 * 
 * /2는 마지막 index에서 중간값을 구하기 위한 식이다. 
 * 마지막 index /2를 한다면 중간 index가 나오기 때문이다.
 */