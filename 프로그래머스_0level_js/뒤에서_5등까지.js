
/**
 * 뒤에서 5등까지
 * 
 * 문제 설명
 * 
 * 정수로 이루어진 리스트 num_list가 주어집니다. 
 * num_list에서 가장 작은 5개의 수를 오름차순으로 담은 리스트를 return하도록 
 * solution 함수를 완성해주세요.
 * 
 * 제한 사항
 * - 6 ≤ num_list의 길이 ≤ 30
 * - 1 ≤ num_list의 원소 ≤ 100
 * 
 * 입출력 예시 
 * 
 *          num_list	             result
 * [12, 4, 15, 46, 38, 1, 14]	[1, 4, 12, 14, 15]
 * 
 * 입출력 예시 설명
 * ex1) [12, 4, 15, 46, 38, 1, 14]를 정렬하면 [1, 4, 12, 14, 15, 38, 46]이 되고, 
 * 앞에서 부터 5개를 고르면 [1, 4, 12, 14, 15]가 됩니다.
 */


//solution01 error! => 

function solution01 (num_list) {
    let answer = [];
    const num = num_list.sort().slice(0,5)
    answer.push(num);
    return answer;
}

/**
 * solution01 함수는 error을 일으켰다. 실행한 결과값이 [[1,12,14,15,38]] 라고 나온것 이다.
 * 배열 안에 배열이 들어가 있는 형태도 틀렸고, 오름차순 정렬이 되지 않아 오류가 일어났다.
 * 
 * 배열 안에 배열이 들어가 있는 형태는 num이 num_list의 정렬된 0~5까지의 배열 [a,b,c,d,e]
 * 이기 때문에 빈 배열인 answer 에 이중으로 배열이 들어가게 되었다.
 * 
 * 또한 위 문제에서 오름차순 배열 이라는 조건이 있었는데 
 * sort 메서드는 배열을 정렬하는 기능을 가지고 있는데, 일반 괄호안에 파라미터가 생략되면 
 * 문자열로 인식해 유니코드 값 순서대로 정렬됩니다.
 */

//▽solution02 성공!
function solution02 (num_list) {
    return num_list.sort((a,b)=>a  - b).slice(0,5);
}

/**
 * 찾아본 결과 sort 메서드의 일반 괄호를 비워두면 문자열로 인식이 되기 때문에
 * 오름차순 정렬 설정을 해줘야 한다. 
 * 
 * sort((a,b) => a-b)
 * 위 sort 메서드의 경우 오름차순 정렬의 비교 함수이다.
 * 
 * sort의 콜백함수(sort함수안의 함수!)는 두개의 인자 a,b를 받는다.
 * 이두  인자(parameter)은 배열 내에서 두 개의 원소를 비교할 때 사용된다.
 * 
 * (a,b) => a-b는 오름차순 정렬을 위한 비교함수!
 * 
 * - a-b 가 0 보다 작으면? a를 b앞에 위치시킨다. -> a가 더 작기 때문에 a가 b보다 앞으로 온다.
 * - a-b 가 0 이면? a 와 b의 순서를 그대로 유지 시킨다. 
 * - a-b 가 0 보다 크면? b를 a보다 앞에 위치시킨다. -> b가 더 작기 때문에 b가 a 앞으로 온다.
 * 
 *따라서 오름차순으로 정렬된 num_list의 숫자형 배열은 .slice 매서드 를 통해 0(첫번째)부터 5(6번째)전까지 (즉 4(5번째)까지 나온다.) 나오게 된다.
 */



