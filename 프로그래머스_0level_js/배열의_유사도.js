/**
 * 배열의 유사도
 * 
 * 문제 설명
 * 
 * 두 배열이 얼마나 유사한지 확인해보려고 합니다. 
 * 문자열 배열 s1과 s2가 주어질 때 같은 원소의 개수를 return하도록 
 * solution 함수를 완성해주세요.
 * 
 * 제한 사항
 * - 1 ≤ s1, s2의 길이 ≤ 100
 * - 1 ≤ s1, s2의 원소의 길이 ≤ 10
 * - s1과 s2의 원소는 알파벳 소문자로만 이루어져 있습니다
 * - s1과 s2는 각각 중복된 원소를 갖지 않습니다.
 * 
 * 입출력 예시
 * 
 * s1	                      s2	                   result
 * ["a", "b", "c"]	["com", "b", "d", "p", "c"]	         2
 * ["n", "omg"]	           ["m", "dot"]	                 0
 * 
 * 입출력 예시 설명
 * ex1) "b"와 "c"가 같으므로 2를 return합니다.
 * ex2) 같은 원소가 없으므로 0을 return합니다.
 * 
 */

/**
 * 문제 해석
 * 
 * 두배열의 요소 값 유사성 진행..!
 * 
 * filter = > 특정 조건을 이용해서 배열이 나온다. 
 * reduce ? -> 
 */

function solution (s1 ,s2) {
    return s1.filter((a)=> s2.includes(a)).length;
}

/**
 * s1과 s2 배열에서 일치하는 요소를 찾아야 된다. (일정 조건 발생)
 * 
 * 그러므로 filter 메서드를 이용해 특정 조건(s1과s2의 일치하는 요소)에 일치하는 것만 
 * 추려내야 한다.
 * 
 * s1배열을 filter 매서드를 이용해서 요소를 걸러낸다.
 * 조건은 콜백함수의 s2.includes()이고, 'a'는 배열의 요소이다. 
 * 
 * filter는 콜백함수의 조건에 따라 새로운 배열을 만드는 메서드 이기에,
 * ((a)=> s2.includes(a))은 s1의 요소 a를 filter의 매개변수로 쓰고, 
 * s2.include(a)를 통해 s2배열에 s1의 각 요소 'a'가 일치하는 부분이 있는지 확인 하는 것이다.
 * 
 * 그리고 일치하는 배열을 s1에 새롭게 return 해서 .length를 통해 길이를 측정한 값을 return 한다.
 */