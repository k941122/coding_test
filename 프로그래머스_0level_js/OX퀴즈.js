/**
 * OX퀴즈 
 * 
 * 문제 설명
 * 
 * 덧셈, 뺄셈 수식들이 'X [연산자] Y = Z' 형태로 들어있는 문자열 배열 quiz가 
 * 매개변수로 주어집니다. 수식이 옳다면 "O"를 틀리다면 "X"를 순서대로 담은 배열을 
 * return하도록 solution 함수를 완성해주세요.
 * 
 * 제한 사항
 * 
 * - 연산 기호와 숫자 사이는 항상 하나의 공백이 존재합니다. 단 음수를 표시하는 마이너스 기호와 숫자 사이에는 공백이 존재하지 않습니다.
 * - 1 ≤ quiz의 길이 ≤ 10
 * - X, Y, Z는 각각 0부터 9까지 숫자로 이루어진 정수를 의미하며, 각 숫자의 맨 앞에 마이너스 기호가 하나 있을 수 있고 이는 음수를 의미합니다.
 * - X, Y, Z는 0을 제외하고는 0으로 시작하지 않습니다.
 * - -10,000 ≤ X, Y ≤ 10,000
 * - -20,000 ≤ Z ≤ 20,000
 * - [연산자]는 + 와 - 중 하나입니다.
 * 
 * 입출력 예시 
 *  quiz                            result
 * ["3 - 4 = -3", "5 + 6 = 11"]	["X", "O"]
 * ["19 - 6 = 13", "5 + 66 = 71", "5 - 15 = 63", "3 - 1 = 2"]	["O", "O", "X", "O"]
 * 
 * 입출력 에시 설명
 * 
 * EX1) 3 - 4 = -3 은 틀린 수식이므로 "X", 5 + 6 = 11 은 옳은 수식이므로 "O" 입니다. 
 *      따라서 ["X", "O"]를 return합니다.
 * 
 * EX2) 19 - 6 = 13 은 옳은 수식이므로 "O", 5 + 66 = 71 은 옳은 수식이므로 
 *      "O", 5 - 15 = 63 은 틀린 수식이므로 "X", 3 - 1 = 2는 옳은 수식이므로 
 *      "O" 따라서 ["O", "O", "X", "O"]를 return합니다.
 * 
 * 
 */

/**
 * 문제 해석
 * 
 * quiz 는 x연산자y=z 문자열 형식으로 숫자 연산이 들어가 있는 배열임
 * 
 * 이 각 요소가 옳다면 o 틀리면 x 로 바꿔라
 * 
 * 각 요소들을 어떤 기준에 따라서 분류 할것
 * 
 * map 과 구조 분해 할당  그리고 split 메서드를 이용해서 
 * 
 * + -를 구별하고 if else 의 조건 식에 넣어서 
 * 해당 식에 맞는 값을 계산한다음 비교 해야 한다. 
 * 
 * 각 요소를 구조분해 할당 후에 숫자를 추울해서 더하거나 뺀 값을
 * 
 * 원래 요소의 결과 값과 비교해서 일치 여부를 확인 
 * 
 * 
 * 
 */

function solution(quiz) {

    const answer = quiz.map((v) => {
        const [left,right] = v.split('=')
        if(left.indexOf('+') > -1) {
            const [leftValue1,leftValue2] = left.split(' + ').map(v=>Number(v))
            return leftValue1 + leftValue2 === Number(right)? 'O':'X'
        } 
        else {
            const [leftValue1,leftValue2] = left.split(' - ').map(v=>Number(v))
            return leftValue1 - leftValue2 === Number(right)?'O':'X'
        }
    })

    return answer;
}

/**
 * quiz 라는 배열을 map 메서드로 각 요소의 값을 순회 하는데
 * 
 * 구조 분해 할당을 통해 quiz 요소를 left right 로 '='dmf 기준으로 나눠준다.
 * 
 * if문의 조건에서 left는 x+y 형식 이기 때문에 indexOf를 이용하여 "+" , "-"일 경우로 나눠준다음
 * 
 * 각 조건이 true일 때 실행되느 식에서 다시 구조 분해 할당을 통해 left를 연산자 (+,-)를
 * 기준으로 나눠 준다. 그리고 해당 요소들을 Number을 통해 숫자형으로 바꾼후
 * 
 * return 에서 leftValue1 과 leftValue2를 연산해서 나온 값이 맨 처음 구조분해 할당 했던
 * right(quiz 요소의 값) 과 일치 하는지 삼항 연산자로 계산한후 true면 o 아니면 x를 출력한다.
 */